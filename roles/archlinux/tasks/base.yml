- name: base > Install base tools
  community.general.pacman: name={{ packages | join(',') }}
  vars:
    packages:
      - acpi
      - base-devel
      - curl
      - ddcutil
      - dmidecode
      - exfat-utils
      - fzf
      - git
      - incron
      - lm_sensors
      - lshw
      - nmap
      - man-db,man-pages
      - openssh
      - pacman-contrib
      - python,python-psutil
      - rsync
      - screen
      - smbclient
      - tree
      - unrar,unzip,xz
      - usbutils
      - wget
      - zsh,zsh-autosuggestions

- name: base > Enable locale
  ansible.builtin.lineinfile:
    dest: /etc/locale.gen
    regexp: '^#({{ item }})$'
    line: '\1'
    backrefs: yes
  with_items:
    - 'en_US.UTF-8 UTF-8'
    - 'fr_FR.UTF-8 UTF-8'
  notify: locale-gen

- name: base > Set system locale
  ansible.builtin.lineinfile: dest=/etc/locale.conf line={{ item }} create=yes
  with_items:
    - 'LANG=fr_FR.UTF-8'

- name: base > Set console keymap
  ansible.builtin.lineinfile: dest=/etc/vconsole.conf line="KEYMAP=fr" create=yes

- name: base > Ensure /etc/X11/xorg.conf.d exists
  ansible.builtin.file: path=/etc/X11/xorg.conf.d state=directory

- name: base > Set X keyboard
  ansible.builtin.copy: src=00-keyboard.conf dest=/etc/X11/xorg.conf.d/00-keyboard.conf

- name: base > Install systemd Timers & Services
  ansible.builtin.copy: src={{ item }} dest=/etc/systemd/system/{{ item }}
  with_items:
    - pacman-sync.service
    - pacman-sync.timer

- name: base > Enable systemd Timers
  ansible.builtin.systemd: name={{ item }} enabled=yes state=started
  with_items:
    - pacman-sync.timer

- name: base > Enable incrond service
  ansible.builtin.systemd: name=incrond enabled=yes state=started

- name: base-aur > Create aur_builder user
  user: name=aur_builder system=yes

- name: base-aur > Allow passwordless sudo pacman for aur_builder
  lineinfile:
    path: /etc/sudoers.d/aur_builder-allow-to-sudo-pacman
    state: present
    line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
    validate: /usr/sbin/visudo -cf %s
    create: yes

- name: base-aur > Install AURs packages
  aur: name={{ packages | join(',') }} use=makepkg state=latest
  become: yes
  become_user: aur_builder
  vars:
    packages:
      - rcm
      - timeshift,timeshift-autosnap
